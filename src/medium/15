https://leetcode-cn.com/problems/3sum/




class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        Arrays.sort(nums);
        for(int i = 0 ; i< nums.length; i++) {
            if(i != 0 && nums[i] == nums[i-1]) {
                continue;
            }
            int left = nums[i];
            int target = -left;
            for(int j = i +1; j < nums.length - 1; j ++) {
                if(j != i+1 && nums[j] == nums[j-1]) {
                    continue;
                }
                int right = nums.length - 1;
                while(j < right && nums[j] + nums[right] > target) {
                    right--;
                }
                if(j == right) {
                    break;
                }
                if(nums[j] + nums[right] == target) {
                    List<Integer> ans = new LinkedList<>();
                    ans.add(nums[i]);
                    ans.add(nums[j]);
                    ans.add(nums[right]);
                    res.add(ans);
                }
            }
        }
        return res;
    }
}