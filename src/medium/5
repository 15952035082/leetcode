https://leetcode-cn.com/problems/longest-palindromic-substring/



class Solution {
    public String longestPalindrome(String s) {
        int maxLength = 0;
        int start = 0,end =0;
        int length = s.length();
        char[] chars = s.toCharArray();
        for(int i = 0; i< length ; i++) {
            int len1 = searchSides(chars, i, i);
            int len2 = searchSides(chars, i, i + 1);
            int curMax = Math.max(len1, len2);
            if(curMax > maxLength) {
                maxLength = curMax;
                start= i - (maxLength -1)/2;
                end = i + maxLength/2;
            }
        }
        return s.substring(start, end + 1);
    }

    private int searchSides(char[] chars, int l, int r) {
        while(l >= 0 && r < chars.length && chars[l] == chars[r]) {
            l--;
            r++;
        }
        return r - l - 1;
    }
}